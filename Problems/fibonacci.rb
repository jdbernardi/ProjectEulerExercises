=begin
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
=end

# PROGRAM Fibonacci
def fibonacci
#  we can start with the first 2 terms in the array
  fib_array = [1,2]
  x = 0 
#  while the sum of the terms is less than 4,000,000 
  while fib_array[-1] < 4000000
#  we will populate the array with the elements
    fib_array << fib_array[x] + fib_array[x+1]
    x += 1
  end
#  with the new array of elements
#  we then check if the element is even
  even_array = []
  fib_array.each { |x| 
    if x % 2 == 0 
      even_array << x 
    end}
#  if its even we put it into the even array
#  once completed the array will be injected to determine the sum


print even_array.inject(0) { |r, e| r + e }
end

fibonacci